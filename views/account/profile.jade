extends ../layoutloggedin

block content
  .container
    h3 Profile Information
    hr
    form.form-horizontal(action='/account/profile', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      .form-group
        .col-md-12
          label.col-sm-3.control-label(for='email') Email
        .col-sm-6
          input.form-control(type='email', name='email', id='email', value='#{user.email}')
      .form-group
        .col-md-12  
          label.col-sm-3.control-label(for='name') Name
        .col-sm-3
          input.form-control(type='text', name='name', id='name', value='#{user.profile.firstname}')
        .col-sm-3
          input.form-control(type='text', name='name', id='name', value='#{user.profile.lastname}')
          
      .form-group
        .col-md-12
          label.col-sm-3.control-label(for='gender') Gender
        .col-sm-4.gender
          label.radio.col-sm-4
            input(type='radio', checked=user.profile.gender=='male', name='gender', value='male', data-toggle='radio')
            span Male
          label.radio.col-sm-4
            input(type='radio', checked=user.profile.gender=='female', name='gender', value='female', data-toggle='radio')
            span Female
      .form-group
        .col-md-12 
          label.col-sm-3.control-label(for='address') Address
        
          //- input.form-control(type='text', name='location', id='location', value='#{user.profile.location}')
        if user.profile.address  
          .col-sm-4
            input.form-control(type='text', name='address', id='address',placeholder='Street Address', value='#{user.profile.address}')
          .col-sm-2
            input.form-control(type='text', name='city', id='city', placeholder='City', value='#{user.profile.city}')
          .col-sm-2
            input.form-control(type='text', name='state', id='state',placeholder='State', value='#{user.profile.state}')
          .col-sm-4    
            input.form-control(type='text', name='zip', id='zip',placeholder='Zip Code', value='#{user.profile.zip}')
        if !user.profile.address
          .col-sm-4
            input.form-control(type='text', name='address', id='address',placeholder='Street Address')
          .col-sm-2
            input.form-control(type='text', name='city', id='city', placeholder='City')
          .col-sm-2
            input.form-control(type='text', name='state', id='state',placeholder='State')
          .col-sm-4    
            input.form-control(type='text', name='zip', id='zip',placeholder='Zip Code')
                      
      .form-group
        input#Avatar_URL(type='hidden', name='avatar_url', value='/images/default.png')
        .col-md-12
          label.col-sm-3.control-label(for='gravatar') Profile Picture
        
        .row.profilePic
          
          img#Preview.profile(src="#{user.gravatar()}")
        .col-xs-7  
          label.btn.changePicButton(for='File_Input') UPLOAD PHOTO        
            input#File_Input(type='file', style='display:none')
        
      .col-md-12.updateProfile
        button.btn.btn.btn-primary(type='submit')          
          | Update Profile
          
  .container.changePassword
    h3 Change Password
    hr
    form.form-horizontal(action='/account/password', method='POST')
      input(type='hidden', name='_csrf', value=_csrf)
      .form-group
        .col-md-12
          .col-md-2.col-xs-7
            label.control-label(for='password') New Password
          .col-md-4.col-xs-5.password
            input.form-control(type='password', name='password', id='password')
      .form-group
        .col-md-12
          .col-md-2.col-xs-7
            label.control-label(for='confirmPassword') Confirm Password
          .col-md-4.col-xs-5.password
            input.form-control(type='password', name='confirmPassword', id='confirmPassword')
        .col-xs-12.change
            button.btn.btn-primary.changebutton(type='submit')
              | Change Password
  .container.deleteAccount
    h3 Delete Account
    hr
    form.form-horizontal(action='/account/delete', method='POST')
      .form-group
        col-xs-12
          p You can delete your account, but keep in mind this action is irreversible.
        input(type='hidden', name='_csrf', value=_csrf)
        .col-xs-12.change
          button.btn.deletebutton(type='submit')
            | Delete my account
    
  script(type='text/javascript').
    /*
    Function to carry out the actual PUT request to S3 using the signed request from the app.
    */
    function upload_file(file, signed_request, url){
      console.log("Step 4");
      var xhr = new XMLHttpRequest();
      xhr.open("PUT", signed_request);
      xhr.setRequestHeader('x-amz-acl', 'public-read');
      xhr.onload = function() {
        if (xhr.status === 200) {
          // console.log(url);
          document.getElementById("Preview").src = url;
          document.getElementById("Avatar_URL").value = url;
        }
      };
      xhr.onerror = function() {
        alert("Could not upload file.");
      };
      xhr.send(file);
    }
    /*
    Function to get the temporary signed request from the app.
    If request successful, continue to upload the file using this signed
    request.
    */
    function get_signed_request(file){
      console.log("Step 3...Speaking to the backend....");
      // console.log("this is the file object",file);
      var xhr = new XMLHttpRequest();
      xhr.open("GET", "/updateS3?userid=#{userid}"+"&file_name="+file.name+"&file_type="+file.type);
      xhr.onreadystatechange = function(){
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            var response = JSON.parse(xhr.responseText);
            console.log(response)
            upload_file(file, response.signed_request, response.url);
          }
          else{
            alert("Could not get signed URL.");
          }
        }
      };
      xhr.send();
    }
    /*
    Function called when file input updated. If there is a file selected, then
    start upload procedure by asking for a signed request from the app.
    */
    function init_upload(){
      console.log("Step 2");
      var files = document.getElementById("File_Input").files;
      var file = files[0];
      if(file == null){
        alert("No file selected.");
        return;
      }
      var url = URL.createObjectURL(this.files[0]);
      var img = new Image;
      img.src = url;
      //Load the image from the blob.
      img.onload = function() {
        file.width=img.width;
        file.height=img.height;
        file.aspectRatio=img.width/img.height;
        checkSize(file);
      };
      function checkSize(){
        // console.log(file)
        if(file.width<101 && file.height<101 && file.size<500000 && file.aspectRatio==1){
          get_signed_request(file);
        }
        else{
          alert("Sorry Image Doesnt Meet Requirements.");
          console.log("width ", file.width)
          console.log("height ", file.height)
          console.log("filesize ", file.size)
          console.log("aspectRatio ", file.width/file.height)
        }
      }
    }
    /*
    Bind listeners when the page loads.
    */
    (function() {
      console.log("Step 1");
      document.getElementById("File_Input").onchange = init_upload;
    })();
